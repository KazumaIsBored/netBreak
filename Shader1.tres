[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform vec2 center;
uniform float force;
uniform float size;
uniform float thickness;
void fragment(){
	float ratio = SCREEN_PIXEL_SIZE.x / SCREEN_PIXEL_SIZE.y;
	vec2 scaledUV = (SCREEN_UV -vec2(0.5,0.0)) / vec2(ratio,1.0) +vec2(0.5,0.0);
	
	float maskR =(1.0 - smoothstep(size,size+0.1,length(scaledUV-center)))*
				smoothstep(size-thickness,size-thickness+0.1,length(scaledUV-center));
	vec2 dispR = normalize(scaledUV - center)*force*maskR; 
	
	float mask =(1.0 - smoothstep(size-0.1,size,length(scaledUV-center)))*
				smoothstep(size-thickness-0.1,size-thickness,length(scaledUV-center));
	vec2 disp = normalize(scaledUV - center)*force*mask; 
	
	float maskG =(1.0 - smoothstep(size-0.2,size-0.1,length(scaledUV-center)))*
				smoothstep(size-thickness-0.2,size-thickness-0.1,length(scaledUV-center));
	vec2 dispG = normalize(scaledUV - center)*force*maskG; 
	
	COLOR.r = texture(SCREEN_TEXTURE,SCREEN_UV-dispR).r;
	COLOR.g = texture(SCREEN_TEXTURE,SCREEN_UV-disp).g;
	COLOR.b = texture(SCREEN_TEXTURE,SCREEN_UV-dispG).b;
}"

[resource]
shader = SubResource( 1 )
shader_param/center = Vector2( 0.5, 0.5 )
shader_param/force = 0.0
shader_param/size = 0.0
shader_param/thickness = 0.012
